.burger {
  position: relative;
  width: 30px;
  height: 30px;
  background: transparent;
}

.burger i,
.burger i::before,
.burger i::after {
  display: block;
  right: 0;
  width: 100%;
  height: 3px;
  background: #505050;
  /*transition: all 0.4s ease;*/
}

.burger i {
  position: relative;
}

.burger i::before,
.burger i::after {
  content: "";
  position: absolute;
}

.burger i::before {
  top: -8px;
}

.burger i::after {
  top: 8px;
}

.burger.burger_active i {
  background: none;
}

.burger.burger_active i::before,
.burger.burger_active i::after {
  top: 0;
}

.burger.burger_active i:before {
  -webkit-transform: rotate(-45deg);
      -ms-transform: rotate(-45deg);
          transform: rotate(-45deg);
}

.burger.burger_active i:after {
  -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
          transform: rotate(45deg);
}
.checkbox {
  position: relative;
  padding-left: 35px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */

.checkbox__input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */

.checkbox__checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
}

/* On mouse-over, add a grey background color */

.checkbox:hover .checkbox__input ~ .checkbox__checkmark {
  background-color: #cccccc;
}

/* When the checkbox is checked, add a blue background */

.checkbox__input:checked ~ .checkbox__checkmark {
  background-color: #2196F3;
}

/* Create the checkmark/indicator (hidden when not checked) */

.checkbox__checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */

.checkbox__input:checked ~ .checkbox__checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */

.checkbox__checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}
.popbox.visible {
  opacity: 1;
  z-index: 999;
  -webkit-transition: opacity 0.3s ease;
  -o-transition: opacity 0.3s ease;
  transition: opacity 0.3s ease;
}

.popbox.opened {
  display: block;
}

.popbox_locked .popbox_main_content.popbox_blur {
  -webkit-filter: blur(15px);
          filter: blur(15px);
}

html.popbox_locked {
  overflow: hidden;
  -ms-touch-action: none;
  touch-action: none;
}

.popbox {
  z-index: -999;
  position: fixed;
  width: 100%;
  max-width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  will-change: opacity;
  -webkit-transition: opacity 0.3s ease;
  -o-transition: opacity 0.3s ease;
  transition: opacity 0.3s ease;
  opacity: 0;
  will-change: opacity;
  background: rgba(60, 52, 66, 0.7);
  padding: 18px;
  padding-top: 5%;
  overflow-y: auto;
  display: none;
}

.popbox_container {
  -webkit-border-radius: 5px;
          border-radius: 5px;
  margin-bottom: 18px;
  padding: 18px;
  margin-left: auto;
  margin-right: auto;
  background: #fff;
  max-width: 400px;
}
html,
body,
div,
span,
h1,
h2,
h3,
h4,
h5,
h6,
p,
i,
b,
img,
form,
input,
label,
ol,
ul,
li,
a,
button {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  outline: none;
  border: none;
  text-decoration: none;
  list-style: none;
}

html,
body {
  overflow-x: hidden;
}

ul {
  font-size: 0;
}

li {
  font-size: 16px;
}

img {
  max-width: 100%;
  height: auto;
}

button,
label {
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}